"""
Рита по поручению Тимофея наводит порядок в правильных скобочных последовательностях (ПСП), состоящих только из круглых скобок (). Для этого ей надо сгенерировать все ПСП длины 2n в алфавитном порядке —– алфавит состоит из ( и ) и открывающая скобка идёт раньше закрывающей.

Помогите Рите —– напишите программу, которая по заданному n выведет все ПСП в нужном порядке.

Рассмотрим второй пример. Надо вывести ПСП из четырёх символов. Таких всего две:

(())
()()
(()) идёт раньше ()(), так как первый символ у них одинаковый, а на второй позиции у первой ПСП стоит (, который идёт раньше ).
Формат ввода
На вход функция принимает n — целое число от 0 до 10.

Формат вывода
Функция должна напечатать все возможные скобочные последовательности заданной длины в алфавитном (лексикографическом) порядке.


Input:
3

Output:
((()))
(()())
(())()
()(())
()()()
"""


def gen_brackets(n: int) -> list[str]:
    if n < 2:
        return ['']

    values = []

    _gen_brackets(n, '', 0, values)

    return values


def _gen_brackets(n: int, current: str, balance: int, values: list[str]):
    if n == 0:
        if balance == 0:
            values.append(current)
        return

    if balance <= n:
        _gen_brackets(n - 1, current + '(', balance + 1, values)
        if balance > 0:
            _gen_brackets(n - 1, current + ')', balance - 1, values)
    else:
        _gen_brackets(n - 1, current + ')', balance - 1, values)


def main():
    n = int(input())
    result = gen_brackets(n * 2)

    print('\n'.join(result))


if __name__ == '__main__':
    main()
